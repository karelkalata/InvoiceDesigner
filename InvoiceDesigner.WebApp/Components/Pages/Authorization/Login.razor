@page "/Login"
@using InvoiceDesigner.Application.QueryParameters
@using InvoiceDesigner.Application.Responses
@using InvoiceDesigner.WebApp.Helpers;
@using InvoiceDesigner.WebApp.Records
@using Microsoft.AspNetCore.Localization


<MudContainer>
	<MudPaper Class="d-flex justify-center align-content-center flex-grow-1 gap-4" Elevation="0">
		<EditForm Model="@_queryUserLogin" OnValidSubmit="OnValidSubmit">
			<DataAnnotationsValidator />
			<MudGrid>
				<MudItem>
					<MudCard>
						<MudCardContent>
							<MudTextField Label="Login"
										  @bind-Value="_queryUserLogin.Login"
										  For="@(() => _queryUserLogin.Login)" />
							<MudTextField Label="Password"
										  InputType="InputType.Password"
										  Class="mt-3"
										  @bind-Value="_queryUserLogin.Password"
										  For="@(() => _queryUserLogin.Password)" />
						</MudCardContent>
						<MudCardActions>
							<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
						</MudCardActions>
					</MudCard>
				</MudItem>
			</MudGrid>
		</EditForm>
	</MudPaper>
</MudContainer>

@code {
	private QueryUserLogin _queryUserLogin = new QueryUserLogin();

	private async Task OnValidSubmit(EditContext context)
	{
		var sendPost = new RecordSendPost<QueryUserLogin>
		{
			Url = "Login",
			ModelSend = _queryUserLogin
		};
		
		var result = await HttpHelper.SendRequest2<QueryUserLogin, ResponseJwtToken>(sendPost);
		if (result != null)
		{
			await LocalStorageService.SetItemAsync<string>("jwtToken", result.JwtToken);
			var redirectUri = Uri.UnescapeDataString(Nav.BaseUri);
			Nav.NavigateTo($"{HttpClientFactory.CreateClient("ApiClient").BaseAddress}api/Culture/Set?culture={result.Locale}&redirectUri={redirectUri}", true);
		}
		else
		{
			_queryUserLogin.Password = string.Empty;
			Snackbar.Add(@localizer["InvalidCredentials"], Severity.Error);
		}
	}
}