@using InvoiceDesigner.Application.DTOs.DtoFormDesigners
@using InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner


<MudDialog Style="width:500px; ">
	<DialogContent>
		<MudTextField T="string" @bind-Value="@_editedDropItemEditDto.Value" multiline FullWidth Lines="5"></MudTextField>
	</DialogContent>
	<DialogActions>
		<MudSelect T="string"
				   Label="Font Size"
				   @bind-Value="@_selectedFontSize"
				   Variant="Variant.Outlined"
				   Dense="true">

			<MudSelectItem Value="@ConstsCssProperty.Value_6px">@ConstsCssProperty.Value_6px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_8px">@ConstsCssProperty.Value_8px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_10px">@ConstsCssProperty.Value_10px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_12px">@ConstsCssProperty.Value_12px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_14px">@ConstsCssProperty.Value_14px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_16px">@ConstsCssProperty.Value_16px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_18px">@ConstsCssProperty.Value_18px</MudSelectItem>
			<MudSelectItem Value="@ConstsCssProperty.Value_20px">@ConstsCssProperty.Value_20px</MudSelectItem>

		</MudSelect>
		<MudButton OnClick="Cancel">@localizer["Cancel"]</MudButton>
		<MudButton Color="Color.Primary" OnClick="Submit">@localizer["Save"]</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter]
	private IMudDialogInstance MudDialog { get; set; } = null!;

	[Parameter]
	public DropItemEditDto DropItemEditDto { get; set; } = new();

	private DropItemEditDto _editedDropItemEditDto = new();

	public string _selectedFontSize = string.Empty;

	private void Cancel() => MudDialog.Cancel();


	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		if (DropItemEditDto != null)
		{

			_editedDropItemEditDto.Value = DropItemEditDto.Value;

			List<CssStyleEditDto> CssStyle = new List<CssStyleEditDto>();
			foreach (var item in DropItemEditDto.CssStyleEditDto)
			{
				CssStyle.Add(
					new CssStyleEditDto
						{
							Name = item.Name,
							Value = item.Value
						}
				);
			}
			_editedDropItemEditDto.CssStyleEditDto = CssStyle;

			var fontSize = _editedDropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.FontSize);
			if (fontSize != null)
				_selectedFontSize = fontSize.Value;
		}

	}

	private void Submit()
	{
		var fontSize = _editedDropItemEditDto.CssStyleEditDto.FirstOrDefault(e => e.Name == ConstsCssProperty.FontSize);
		if (fontSize != null)
			fontSize.Value = _selectedFontSize;

		DropItemEditDto.Value = _editedDropItemEditDto.Value;
		
		List<CssStyleEditDto> CssStyle = new List<CssStyleEditDto>();
		foreach (var item in _editedDropItemEditDto.CssStyleEditDto)
		{
			CssStyle.Add(
				new CssStyleEditDto
					{
						Name = item.Name,
						Value = item.Value
					}
			);
		}
		DropItemEditDto.CssStyleEditDto = CssStyle;

		MudDialog.Close(DialogResult.Ok(DropItemEditDto));
	}
}
