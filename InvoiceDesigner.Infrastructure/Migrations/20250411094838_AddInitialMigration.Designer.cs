// <auto-generated />
using System;
using InvoiceDesigner.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceDesigner.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250411094838_AddInitialMigration")]
    partial class AddInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BIC")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DefaultVat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("PaymentTerms")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("VatId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WWW")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "US Dollar",
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "USD"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Euro",
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "EUR"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Czech Koruna",
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "CZK"
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("VatId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrice");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            IsArchived = false,
                            IsDeleted = false,
                            Locale = "en-US",
                            Login = "admin",
                            Name = "Super Admin",
                            PasswordHash = "1708D30988E562DD2958B50B77F0D61C47C59FD7555F3B91AB02D486F361504F7E0C569157D104D99E5076BFF20AF9EE38482A63BA10993B28C38F9936668010",
                            PasswordSalt = "7A6604F49A4E8EFCBB8B6CA86305FB0E4E14F817AE6D8726DE7A56463581A1D21D68699970298BBFE2182AE02366BCBB56C14DF47B9D000AF0C5D74DCED88953"
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.BankReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(0m);

                    b.Property<int>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("BankReceipts");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(0m);

                    b.Property<int>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnabledVat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Vat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.ChartOfAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Asset1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Asset2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Asset3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeChartOfAccount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ChartOfAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Asset1 = 2,
                            Asset2 = 0,
                            Asset3 = 0,
                            Code = 1200,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "Accounts Receivable",
                            TypeChartOfAccount = 0
                        },
                        new
                        {
                            Id = 2,
                            Asset1 = 1,
                            Asset2 = 0,
                            Asset3 = 0,
                            Code = 1030,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "Bank: Operating",
                            TypeChartOfAccount = 0
                        },
                        new
                        {
                            Id = 3,
                            Asset1 = 0,
                            Asset2 = 0,
                            Asset3 = 0,
                            Code = 2200,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "Sales Tax",
                            TypeChartOfAccount = 1
                        },
                        new
                        {
                            Id = 4,
                            Asset1 = 3,
                            Asset2 = 0,
                            Asset3 = 0,
                            Code = 4000,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = "Sales",
                            TypeChartOfAccount = 2
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.DoubleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountingDocument")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Count")
                        .HasColumnType("TEXT");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditAsset1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditAsset2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditAsset3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Debit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebitAsset1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebitAsset2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DebitAsset3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DocumentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Credit");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("Debit");

                    b.ToTable("Accounting");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.DoubleEntrySetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountingDocument")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Debit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntryMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Credit");

                    b.HasIndex("Debit");

                    b.ToTable("DoubleEntriesSetup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountingDocument = 0,
                            AmountType = 1,
                            Credit = 4,
                            Debit = 1,
                            EntryMode = 0,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = ""
                        },
                        new
                        {
                            Id = 2,
                            AccountingDocument = 0,
                            AmountType = 2,
                            Credit = 3,
                            Debit = 1,
                            EntryMode = 1,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = ""
                        },
                        new
                        {
                            Id = 3,
                            AccountingDocument = 1,
                            AmountType = 0,
                            Credit = 1,
                            Debit = 2,
                            EntryMode = 1,
                            IsArchived = false,
                            IsDeleted = false,
                            Name = ""
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.CssStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DropItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DropItemId");

                    b.ToTable("DropItemStyles");

                    b.HasData(
                        new
                        {
                            Id = 2509,
                            DropItemId = 401,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2510,
                            DropItemId = 401,
                            Name = "text-align",
                            Value = "right"
                        },
                        new
                        {
                            Id = 2511,
                            DropItemId = 401,
                            Name = "font-size",
                            Value = "16px"
                        },
                        new
                        {
                            Id = 2512,
                            DropItemId = 401,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2513,
                            DropItemId = 401,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2514,
                            DropItemId = 401,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2515,
                            DropItemId = 402,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2516,
                            DropItemId = 402,
                            Name = "text-align",
                            Value = "right"
                        },
                        new
                        {
                            Id = 2517,
                            DropItemId = 402,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2518,
                            DropItemId = 402,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2519,
                            DropItemId = 402,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2520,
                            DropItemId = 402,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2521,
                            DropItemId = 403,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2522,
                            DropItemId = 403,
                            Name = "text-align",
                            Value = "right"
                        },
                        new
                        {
                            Id = 2523,
                            DropItemId = 403,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2524,
                            DropItemId = 403,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2525,
                            DropItemId = 403,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2526,
                            DropItemId = 403,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2527,
                            DropItemId = 404,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2528,
                            DropItemId = 404,
                            Name = "text-align",
                            Value = "right"
                        },
                        new
                        {
                            Id = 2529,
                            DropItemId = 404,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2530,
                            DropItemId = 404,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2531,
                            DropItemId = 404,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2532,
                            DropItemId = 404,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2533,
                            DropItemId = 405,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2534,
                            DropItemId = 405,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2535,
                            DropItemId = 405,
                            Name = "font-size",
                            Value = "16px"
                        },
                        new
                        {
                            Id = 2536,
                            DropItemId = 405,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2537,
                            DropItemId = 405,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2538,
                            DropItemId = 405,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2539,
                            DropItemId = 406,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2540,
                            DropItemId = 406,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2541,
                            DropItemId = 406,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2542,
                            DropItemId = 406,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2543,
                            DropItemId = 406,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2544,
                            DropItemId = 406,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2545,
                            DropItemId = 406,
                            Name = "AddCurrencySymbol",
                            Value = "none"
                        },
                        new
                        {
                            Id = 2546,
                            DropItemId = 406,
                            Name = "AddCurrencySymbolFooter",
                            Value = "right"
                        },
                        new
                        {
                            Id = 2547,
                            DropItemId = 406,
                            Name = "FooterLeftMargin",
                            Value = "75 %"
                        },
                        new
                        {
                            Id = 2548,
                            DropItemId = 407,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2549,
                            DropItemId = 407,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2550,
                            DropItemId = 407,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2551,
                            DropItemId = 407,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2552,
                            DropItemId = 407,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2553,
                            DropItemId = 407,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2554,
                            DropItemId = 408,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2555,
                            DropItemId = 408,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2556,
                            DropItemId = 408,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2557,
                            DropItemId = 408,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2558,
                            DropItemId = 408,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2559,
                            DropItemId = 408,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2560,
                            DropItemId = 409,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2561,
                            DropItemId = 409,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2562,
                            DropItemId = 409,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2563,
                            DropItemId = 409,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2564,
                            DropItemId = 409,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2565,
                            DropItemId = 409,
                            Name = "font-weight",
                            Value = "bold"
                        },
                        new
                        {
                            Id = 2566,
                            DropItemId = 410,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2567,
                            DropItemId = 410,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2568,
                            DropItemId = 410,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2569,
                            DropItemId = 410,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2570,
                            DropItemId = 410,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2571,
                            DropItemId = 410,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2572,
                            DropItemId = 411,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2573,
                            DropItemId = 411,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2574,
                            DropItemId = 411,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2575,
                            DropItemId = 411,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2576,
                            DropItemId = 411,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2577,
                            DropItemId = 411,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2578,
                            DropItemId = 412,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2579,
                            DropItemId = 412,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2580,
                            DropItemId = 412,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2581,
                            DropItemId = 412,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2582,
                            DropItemId = 412,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2583,
                            DropItemId = 412,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2584,
                            DropItemId = 413,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2585,
                            DropItemId = 413,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2586,
                            DropItemId = 413,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2587,
                            DropItemId = 413,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2588,
                            DropItemId = 413,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2589,
                            DropItemId = 413,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2590,
                            DropItemId = 414,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2591,
                            DropItemId = 414,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2592,
                            DropItemId = 414,
                            Name = "font-size",
                            Value = "10px"
                        },
                        new
                        {
                            Id = 2593,
                            DropItemId = 414,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2594,
                            DropItemId = 414,
                            Name = "font-style",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2595,
                            DropItemId = 414,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2596,
                            DropItemId = 415,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2597,
                            DropItemId = 415,
                            Name = "text-align",
                            Value = "center"
                        },
                        new
                        {
                            Id = 2598,
                            DropItemId = 415,
                            Name = "font-size",
                            Value = "12px"
                        },
                        new
                        {
                            Id = 2599,
                            DropItemId = 415,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2600,
                            DropItemId = 415,
                            Name = "font-style",
                            Value = "italic"
                        },
                        new
                        {
                            Id = 2601,
                            DropItemId = 415,
                            Name = "font-weight",
                            Value = "normal"
                        },
                        new
                        {
                            Id = 2602,
                            DropItemId = 416,
                            Name = "flex-grow",
                            Value = "1"
                        },
                        new
                        {
                            Id = 2603,
                            DropItemId = 416,
                            Name = "text-align",
                            Value = "left"
                        },
                        new
                        {
                            Id = 2604,
                            DropItemId = 416,
                            Name = "font-size",
                            Value = "8px"
                        },
                        new
                        {
                            Id = 2605,
                            DropItemId = 416,
                            Name = "height",
                            Value = "25px"
                        },
                        new
                        {
                            Id = 2606,
                            DropItemId = 416,
                            Name = "font-style",
                            Value = "italic"
                        },
                        new
                        {
                            Id = 2607,
                            DropItemId = 416,
                            Name = "font-weight",
                            Value = "normal"
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.DropItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormDesignerSchemeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Selector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StartSelector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FormDesignerSchemeId");

                    b.ToTable("DropItems");

                    b.HasData(
                        new
                        {
                            Id = 401,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_0_1",
                            StartSelector = "_Invoice",
                            UniqueId = "{Invoice.Number}",
                            Value = "INVOICE # {Invoice.Number}"
                        },
                        new
                        {
                            Id = 402,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_4_1",
                            StartSelector = "_Invoice",
                            UniqueId = "{Invoice.PONumber}",
                            Value = "P.O. #  {Invoice.PONumber}"
                        },
                        new
                        {
                            Id = 403,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_2_1",
                            StartSelector = "_Invoice",
                            UniqueId = "{Invoice.DateTime}",
                            Value = "DATE: {Invoice.DateTime}"
                        },
                        new
                        {
                            Id = 404,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_3_1",
                            StartSelector = "_Invoice",
                            UniqueId = "{Invoice.DueDate}",
                            Value = "DUE DATE: {Invoice.DueDate}"
                        },
                        new
                        {
                            Id = 405,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_0_0",
                            StartSelector = "_Invoice",
                            UniqueId = "{Invoice.Company}",
                            Value = "{Invoice.Company}"
                        },
                        new
                        {
                            Id = 406,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_11_0",
                            StartSelector = "_Invoice",
                            UniqueId = "{Invoice.InvoiceItems}",
                            Value = "{Invoice.InvoiceItems}"
                        },
                        new
                        {
                            Id = 407,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_2_0",
                            StartSelector = "_Company",
                            UniqueId = "{Company.TaxId}",
                            Value = "Tax Id: {Company.TaxId}"
                        },
                        new
                        {
                            Id = 408,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_3_0",
                            StartSelector = "_Company",
                            UniqueId = "{Company.VatId}",
                            Value = "Vat Id: {Company.VatId}"
                        },
                        new
                        {
                            Id = 409,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_5_1",
                            StartSelector = "_Other",
                            UniqueId = "7dae4134-bba4-49f1-bc47-d19a2f845ed6",
                            Value = "TO "
                        },
                        new
                        {
                            Id = 410,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_6_1",
                            StartSelector = "_Customer",
                            UniqueId = "{Customer.Name}",
                            Value = "{Customer.Name}"
                        },
                        new
                        {
                            Id = 411,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_7_1",
                            StartSelector = "_Customer",
                            UniqueId = "{Customer.TaxId}",
                            Value = "Tax Id: {Customer.TaxId}"
                        },
                        new
                        {
                            Id = 412,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_5_0",
                            StartSelector = "_Bank",
                            UniqueId = "{Bank.Name}",
                            Value = "{Bank.Name}"
                        },
                        new
                        {
                            Id = 413,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_6_0",
                            StartSelector = "_Bank",
                            UniqueId = "{Bank.BIC}",
                            Value = "{Bank.BIC}"
                        },
                        new
                        {
                            Id = 414,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_7_0",
                            StartSelector = "_Bank",
                            UniqueId = "{Bank.Account}",
                            Value = "{Bank.Account}"
                        },
                        new
                        {
                            Id = 415,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_13_0",
                            StartSelector = "_Other",
                            UniqueId = "5a0e0a8c-f374-4099-8295-9b3471af899c",
                            Value = "Karel Kalata"
                        },
                        new
                        {
                            Id = 416,
                            FormDesignerSchemeId = 1,
                            Selector = "coor_9_0",
                            StartSelector = "_Other",
                            UniqueId = "25695f53-d1c5-46a0-b921-1a392fc1aba7",
                            Value = "If you have any questions, please contact us at {Company.Phone} or {Company.Email}"
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.FormDesigner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountingDocument")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DynamicHeight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PageMargin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageOrientation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageSizes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FormDesigners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountingDocument = 0,
                            DynamicHeight = false,
                            Name = "default",
                            PageMargin = 5,
                            PageOrientation = 0,
                            PageSizes = 0
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.FormDesignerScheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Column")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormDesignerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FormDesignerId");

                    b.ToTable("FormDesignerSchemes");

                    b.HasData(
                        new
                        {
                            Id = 1377,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 0
                        },
                        new
                        {
                            Id = 1378,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 1
                        },
                        new
                        {
                            Id = 1379,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 2
                        },
                        new
                        {
                            Id = 1380,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 3
                        },
                        new
                        {
                            Id = 1381,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 4
                        },
                        new
                        {
                            Id = 1382,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 5
                        },
                        new
                        {
                            Id = 1383,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 6
                        },
                        new
                        {
                            Id = 1384,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 7
                        },
                        new
                        {
                            Id = 1385,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 8
                        },
                        new
                        {
                            Id = 1386,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 9
                        },
                        new
                        {
                            Id = 1387,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 10
                        },
                        new
                        {
                            Id = 1388,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 11
                        },
                        new
                        {
                            Id = 1389,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 12
                        },
                        new
                        {
                            Id = 1390,
                            Column = 1,
                            FormDesignerId = 1,
                            Row = 13
                        },
                        new
                        {
                            Id = 1391,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 14
                        },
                        new
                        {
                            Id = 1392,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 15
                        },
                        new
                        {
                            Id = 1393,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 16
                        },
                        new
                        {
                            Id = 1394,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 17
                        },
                        new
                        {
                            Id = 1395,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 18
                        },
                        new
                        {
                            Id = 1396,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 19
                        },
                        new
                        {
                            Id = 1397,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 20
                        },
                        new
                        {
                            Id = 1398,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 21
                        },
                        new
                        {
                            Id = 1399,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 22
                        },
                        new
                        {
                            Id = 1400,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 23
                        },
                        new
                        {
                            Id = 1401,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 24
                        },
                        new
                        {
                            Id = 1402,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 25
                        },
                        new
                        {
                            Id = 1403,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 26
                        },
                        new
                        {
                            Id = 1404,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 27
                        },
                        new
                        {
                            Id = 1405,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 28
                        },
                        new
                        {
                            Id = 1406,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 29
                        },
                        new
                        {
                            Id = 1407,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 30
                        },
                        new
                        {
                            Id = 1408,
                            Column = 0,
                            FormDesignerId = 1,
                            Row = 31
                        });
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.PrintInvoice", b =>
                {
                    b.Property<Guid>("Giud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrintFormId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Giud");

                    b.ToTable("PrintInvoices");
                });

            modelBuilder.Entity("UserCompany", b =>
                {
                    b.Property<int>("ActivityUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActivityUserId", "CompanyId");

                    b.HasIndex("CompanyId");

                    b.ToTable("UserCompany");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Bank", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Company", "Company")
                        .WithMany("Banks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Company", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.ProductPrice", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Product", null)
                        .WithMany("ProductPrice")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.BankReceipt", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Documents.Invoice", "Invoice")
                        .WithOne()
                        .HasForeignKey("InvoiceDesigner.Domain.Shared.Models.Documents.BankReceipt", "InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.Invoice", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.InvoiceItem", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Documents.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Product", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.DoubleEntry", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.ChartOfAccounts", "CreditAccount")
                        .WithMany()
                        .HasForeignKey("Credit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.ChartOfAccounts", "DebitAccount")
                        .WithMany()
                        .HasForeignKey("Debit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("CreditAccount");

                    b.Navigation("Currency");

                    b.Navigation("DebitAccount");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.DoubleEntrySetup", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.ChartOfAccounts", "CreditAccount")
                        .WithMany()
                        .HasForeignKey("Credit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsAccounting.ChartOfAccounts", "DebitAccount")
                        .WithMany()
                        .HasForeignKey("Debit")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreditAccount");

                    b.Navigation("DebitAccount");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.CssStyle", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.DropItem", "DropItem")
                        .WithMany("CssStyle")
                        .HasForeignKey("DropItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DropItem");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.DropItem", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.FormDesigner", null)
                        .WithMany("DropItems")
                        .HasForeignKey("FormDesignerSchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.FormDesignerScheme", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.FormDesigner", null)
                        .WithMany("Schemes")
                        .HasForeignKey("FormDesignerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserCompany", b =>
                {
                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.User", null)
                        .WithMany()
                        .HasForeignKey("ActivityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceDesigner.Domain.Shared.Models.Directories.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Company", b =>
                {
                    b.Navigation("Banks");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Directories.Product", b =>
                {
                    b.Navigation("ProductPrice");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.Documents.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.DropItem", b =>
                {
                    b.Navigation("CssStyle");
                });

            modelBuilder.Entity("InvoiceDesigner.Domain.Shared.Models.ModelsFormDesigner.FormDesigner", b =>
                {
                    b.Navigation("DropItems");

                    b.Navigation("Schemes");
                });
#pragma warning restore 612, 618
        }
    }
}
